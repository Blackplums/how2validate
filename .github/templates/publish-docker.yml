name: Publish Docker Image

workflow_call:
    inputs:
      registry:
        description: 'Container registry (eg. ghcr.io)'
        required: true
        type: string
        default: 'ghcr.io'

      image_name:
        description: 'Repository/name for image (eg. owner/repo)'
        required: true
        type: string

      context:
        description: 'Build context path'
        required: true
        type: string
        default: './src/docker'

      dockerfile:
        description: 'Path to Dockerfile'
        required: true
        type: string
        default: './src/docker/Dockerfile'

      push:
        description: 'Whether to push the image (true/false)'
        required: true
        type: string
        default: 'true'
    
    secrets:
      github_token:
        description: 'GitHub token to authenticate to registry'
        required: true
        type: string

    outputs:
      digest:
        description: 'Image digest produced by docker/build-push-action'
        value: ${{ jobs.publish.outputs.digest }}
      tags:
        description: 'Computed image tags'
        value: ${{ jobs.publish.outputs.tags }}

jobs:
  publish:
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.push.outputs.digest }}
      tags: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.registry }}
          username: ${{ github.actor }}
          password: ${{ inputs.github_token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.registry }}/${{ inputs.image_name }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          push: ${{ inputs.push }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ inputs.registry }}/${{ inputs.image_name }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
